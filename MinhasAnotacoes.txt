Linux dpkg - where does it install to?
dpkg -L library.deb

findstr /s "percentual.minimo.nova.parcela" *.*

#PSQL
chcp 65001
set client_encoding to UTF8 \g
\c plus
set client_encoding to UTF8 \g
select * from global.usuario \g

psql

select pga.pid, substring(pga.query, 0, 50), pga.query_start from pg_catalog.pg_stat_activity pga;
select pga.pid, substring(pga.query, 0, 50), pga.backend_start, pga.state, pga.state_change from pg_catalog.pg_stat_activity pga;
select pga.pid, substring(pga.query, 0, 50), pga.backend_start, pga.state, pga.state_change from pg_catalog.pg_stat_activity pga where pga.query not like 'SHOW TRANSACTION%' AND pga.query not like 'COMMIT';
select pga.pid, substring(pga.query, 0, 50), pga.backend_start, pga.state, pga.state_change from pg_catalog.pg_stat_activity pga where pga.query not like 'SHOW TRANSACTION%' AND pga.query not like 'COMMIT' and pga.query <> '';
select pga.pid, substring(pga.query, 0, 50), pga.backend_start, pga.state, pga.state_change from pg_catalog.pg_stat_activity pga where pga.query not like 'SHOW TRANSACTION%' AND pga.query not like 'COMMIT' and pga.query <> '' and state = 'active';

--Por favor termine
SELECT pg_cancel_backend(<pid of the process>);

--Termina agora porra
SELECT pg_terminate_backend(19895);

Periodically run a query with PostgreSQL
First run the command you’d like to repeat:
test-db=# SELECT now();
Then just type \watch X to repeat your query every X seconds:
test-db=# \watch 3
################################################################################
#Acesso JBoss Homolog
sftp://0.0.0.0/caminho/para/jboss/bin-7.1.1.Final/standalone/deployments
ssh root@0.0.0.0

ssh root@0.0.0.0 tail -f /caminho/para/jboss/bin-7.1.1.Final/standalone/log/server.log

/caminho/para/jboss/bin-7.1.1.Final/standalone/log/

Baixar log do servidor
pscp root@0.0.0.0:/caminho/para/jboss/bin-7.1.1.Final/standalone/log/server.log C:/Dev/temp/log
~/.bashrc possui o alias baixarlog

baixarlog='pscp root@0.0.0.0:/caminho/para/jboss/bin-7.1.1.Final/standalone/log/server.log C:/Dev/temp/log'
alias gs='git status'
alias gf='git fetch'
alias gfs='git fetch; git status'

################################################################################
## PowerShell ##
################
https://www.howtogeek.com/50236/customizing-your-powershell-profile/
https://pt.stackoverflow.com/questions/220078/o-que-significa-o-erro-execu%C3%A7%C3%A3o-de-scripts-foi-desabilitada-neste-sistema/220087

Function acompanharLog {ssh root@0.0.0.0 tail -f /caminho/para/jboss/bin-7.1.1.Final/standalone/log/server.log}
powershell -ExecutionPolicy RemoteSigned

#JBossHomolog
Function acompanharlog {ssh root@0.0.0.0 tail -f /caminho/para/jboss/bin-7.1.1.Final/standalone/log/server.log}
Function baixarlog {pscp root@0.0.0.0:/caminho/para/jboss/bin-7.1.1.Final/standalone/log/server.log C:/Dev/temp/log; start C:/Dev/temp/log;}

#GIT
Function gs {git status}
Function gf {git fetch}
Function gfs {git fetch; git status}
Function projetos {cd C:/Dev/GitLab}

#Maven
Function installcore {mvn -T 4 install -o -DskipTests -Dmaven.generate.sources=false -Dmaven.test.skip=true -pl core -am}

################################################################################

JBoss AS 7 - Fazer/Remover deploy
	1. Conectar na máquina remota via SSH
	2. Invocar o jboss-cli.sh da pasta BIN do JBoss
	3. undeploy green.war
	4. Copiar o novo war pra pasta deployments
	5. deploy /caminho/para/jboss/bin-7.1.1.Final/standalone/deployments/green.war

################################################################################
 
mvn install:install-file -Dfile=C:\Dev\libs\oaks\ICPBravo\ICPBravo\1.30\ICPBravo-1.30.jar -DgroupId=br.com.oaks.ICPBravo -DartifactId=ICPBravo -Dversion=1.30 -Dpackaging=jar -DgeneratePom=true

mvn org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dfile=C:\Dev\libs\oaks\ICPBravo\ICPBravo\1.30\ICPBravo-1.30.jar -DgroupId=br.com.oaks.ICPBravo -DartifactId=ICPBravo -Dversion=1.30 -Dpackaging=jar -DgeneratePom=true

mvn install:install-file -Dfile=ICPBravo-1.30.jar -DgroupId=br.com.oaks.ICPBravo -DartifactId=ICPBravo -Dversion=1.30 -Dpackaging=jar -DgeneratePom=true

--Skip Test Compilation
<plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>3.7.0</version>
	<configuration>
		<source>1.8</source>
		<target>1.8</target>
		<compilerArgument>-Xlint:sunapi</compilerArgument>
		<compilerArgument>-XDenableSunApiLintControl</compilerArgument>
	</configuration>
	<executions>
		<execution>
			<id>default-testCompile</id>
			<phase>test-compile</phase>
			<goals>
				<goal>testCompile</goal>
			</goals>
			<configuration>
				<skip>true</skip>
			</configuration>
		</execution>
	</executions>
</plugin>

###############################################################################
#JBoss AS 7 Hotdeploy
Server Behavior
	(Desmarcar) Listen on all interfaces....
	
Server State Detectors
	Startup e Shutdown: (Web Port)
	
No web.xml do projeto: 
<context-param>
	<param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name>
	<param-value>1</param-value>
</context-param>

No components.xml:
<core:init debug="true" />

################################################################################

set java7=C:\Dev\JDK\jdk1.7.0_80\bin\java.exe $*
set JAVA_HOME=C:\Dev\JDK\jdk1.7.0_80

################################################################################
--Estando no parent
installcore
clear; mvn clean; clear; mvn install -o -DskipTests -pl core -am
clear; mvn clean; clear; mvn package -o -DskipTests -pl tconsig

clear; mvn clean; clear; mvn compile -o -DskipTests -pl tconsig -am
clear; mvn clean; clear; mvn package -rf green -o -DskipTests -pl green -am

clear; mvn clean; clear; mvn install -o -DskipTests -pl core -am; mvn package -rf plus -o -DskipTests -pl plus -am
clear; mvn clean; clear; mvn install -o -DskipTests -pl core -am; mvn package -o -DskipTests -pl green -am

echo "Clean"; mvn clean -q; echo "Compile"; mvn compile -T 4 -q -DskipTests; echo "Package"; mvn package -q -T 4 -DskipTests -P jcr-storage,nexus-tjmt-releases,TJMTDEV,UseEhCache; echo "Fim";

mvn dependency:copy-dependencies -DoutputDirectory=target/test-classes/WEB-INF/lib/

git restore .
git stash -u -m "Tarefa17918_Margem, Tarefa17856_ValorMinParcela."
git stash -u -k -m "Tarefa17918_Margem, Tarefa17856_ValorMinParcela Merged com v13.0.1."
git stash push -u -m "Tarefa17918 concluída, anexar às mudanças da Tarefa17856."
Saved working directory and index state WIP on v12.0: dca4391a Correção do bug ao atribuir Concorrência na tela de cadastro de RegraItem e tentar avançar para a próxima tela.

Clonar uma branch específica
git clone --branch release/v12.0 https://devconsignun@bitbucket.org/TotemTI-Team/parent.git

Copia um commit para a branch atual
git cherry-pick -n %hashdocommit%

git checkout -b release/v12.0.1

Restaura para o último commit
git reset --hard

Remove untracked files from the working tree
git clean -f -d 

Mostrar arquivos no commit - https://stackoverflow.com/questions/424071/how-to-list-all-the-files-in-a-commit
git diff-tree --no-commit-id --name-only -r bd61ad98

################################################################################

https://maven.apache.org/surefire/maven-surefire-plugin/examples/single-test.html
https://mkyong.com/maven/how-to-run-unit-test-with-maven/

# Run all the unit test classes.
$ mvn test

# Run a single test class.
$ mvn -Dtest=TestApp1 test

# Run multiple test classes.
$ mvn -Dtest=TestApp1,TestApp2 test

# Run a single test method from a test class.
$ mvn -Dtest=TestApp1#methodname test

# Run all test methods that match pattern 'testHello*' from a test class.
$ mvn -Dtest=TestApp1#testHello* test

# Run all test methods match pattern 'testHello*' and 'testMagic*' from a test class.
$ mvn -Dtest=TestApp1#testHello*+testMagic* test

################################################################################

java11() { "C:\Dev\JDK\jdk-11.0.6\bin\java.exe" "$@"; }
doskey java11=C:\Dev\JDK\jdk-11.0.6\bin\java.exe $*

java11 -Dspring.profiles.active=dev -jar cartao-0.0.1-SNAPSHOT.jar

################################################################################

https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
docker ps -a
docker start [nome da imagem]

sudo docker start docker_frontend_1; sudo docker start docker_gateway_1; sudo docker start docker_rabbitmq_1; sudo docker start docker_discovery_1;
sudo docker stop docker_rabbitmq_1; sudo docker stop docker_gateway_1; sudo docker stop docker_frontend_1; sudo docker stop docker_discovery_1;

################################################################################

# Sincronizar diretórios
watch -n 1 rsync -cavu --delete a/ b

watch -n 1 rsync -cavu --delete pje/ /home/lucas/Dev/Servidores/jboss-eap-7.1/standalone/data/content/e7/639e5e0db337fb283c0d8b21b0e4242b77a0a1/content

/home/lucas/Dev/Servidores/jboss-eap-7.1/standalone/data/managed-exploded/pje.war/Processo

################################################################################

-Xms2048m
-Xmx4096m
-Dbr.jus.cnj.pje.jcr-storage.configuration=D:\projetos\servers\jcr-storage.properties
-noverify
-Dpje.producao=false
-Djboss.server.default.config=standalone.xml

################################################################################

Alterações no SO para JBoss habilitar memória de debug para jvm
/proc/sys/vm/nr_hugepages de 0 para 1536
sudo echo 1536 > /proc/sys/vm/nr_hugepages

################################################################################

Committer: Lucas Adriano de Matos Vilhagra <lucas@pop-os.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author
    
################################################################################
Criar função construirDeploy
    
lucas@pop-os:~/Dev/Docker$ function fconstruirDeploy {
> echo "Clean"; mvn clean -q; echo "Compile"; mvn compile -T 4 -q -DskipTests; echo "Package"; mvn package -q -T 4 -DskipTests -P jcr-storage,nexus-tjmt-releases,TJMTDEV,UseEhCache; echo "Fim"
> }

################################################################################

#https://www.jamescoyle.net/how-to/943-create-a-ram-disk-in-linux
sudo mount -t tmpfs -o size=1256m tmpfs /mnt/ramdiskPje
sudo mount -t tmpfs -o size=1024m tmpfs /mnt/ramdiskJboss

sudo umount -l -v /mnt/ramdiskPje

clear; rm -r -d /mnt/ramdiskJboss/*; jbb; ./standalone.sh -c standalone1g.xml -Djboss.server.temp.dir=/mnt/ramdiskJboss/tmp/server -Djboss.controller.temp.dir=/mnt/ramdiskJboss/tmp/controller -Djboss.domain.log.dir=/mnt/ramdiskJboss/log -Djboss.server.data.dir=/mnt/ramdiskJboss/data -Djboss.domain.deployment.dir=/mnt/ramdiskJboss/deployments --debug 8787
clear; rm -r -d /mnt/ramdiskJboss/*; jbb; ./standalone.sh -c standalone2g.xml -Djboss.server.temp.dir=/mnt/ramdiskJboss/tmp/server -Djboss.controller.temp.dir=/mnt/ramdiskJboss/tmp/controller -Djboss.domain.log.dir=/mnt/ramdiskJboss/log -Djboss.server.data.dir=/mnt/ramdiskJboss/data -Djboss.domain.deployment.dir=/mnt/ramdiskJboss/deployments --debug 8787

<jms-queue name="PJeEventsQueue" entries="java:/queue/PJeEventsQueue"/>

################################################################################
Warsaw
Confirme se o módulo de segurança da Caixa está funcional, com o comando abaixo;
ps -ef | grep warsaw

sudo systemctl stop warsaw
sudo systemctl disable warsaw

sudo systemctl enable warsaw
sudo systemctl start warsaw

sudo apt-get remove warsaw

################################################################################

Não tá subindo o projeto?? D:

Docker up?
Executou o sudo echo 1536 > /proc/sys/vm/nr_hugepages;
Adicionou o pjeEventsQueue no standalone.xml?
Verificar o base.host no pom
Deu meia lua pra tŕas e mortal carpado pra frente?

################################################################################

Criar minhas variáveis do sistema:
Gerar o arquivo /etc/profiel.d/ambiente.sh
Conteúdo:
export JAVA_HOME=/home/lucas/Dev/Java/JDK/jdk1.8.0_261_64bits
export PATH=$PATH:$JAVA_HOME/bin

export M2_HOME=/home/lucas/Dev/Maven-3.6.3
export PATH=$PATH:$M2_HOME/bin

################################################################################

.bashrc
fconstruirDeploy() {
	echo "Clean"
	mvn clean -q
	echo "Compile"
	mvn compile -T 2C -DskipTests
	echo "Package"
	mvn package -T 2C -DskipTests -Dmaven.javadoc.skip=true -P jcr-storage,nexus-tjmt-releases,TJMTDEV
	echo "Fim"
}

################################################################################
BACKUP DOS MEUS ALIAS

#VPN
alias pingvpns='ping 200.251.57.130 -i 0.2 -c 4; ping 179.252.121.130 -i 0.2 -c 4'
alias convpntjmt1='snx -s 200.251.57.130  -u 42808'
alias convpntjmt2='snx -s 179.252.121.130 -u 42808'
alias descvpn='snx -d'

#Git
alias gt='git status'
alias gf='git fetch'
alias gfs='git fetch; git status'

#cd
alias jbb='cd /home/lucas/Dev/Servidores/jboss-eap-7.1/bin'
alias pje='cd /home/lucas/Dev/Git/pje'

alias construirDeploy='echo "Clean"; mvn clean -q; echo "Compile"; mvn compile -T 4 -q -DskipTests; echo "Package"; mvn package -q -T 4 -DskipTests -P jcr-storage,nexus-tjmt-releases,TJMTDEV,UseEhCache; echo "Fim";'

alias dockerStart='sudo docker start docker_frontend_1; sudo docker start docker_gateway_1; sudo docker start docker_rabbitmq_1; sudo docker start docker_discovery_1;'
alias dockerStop='sudo docker stop docker_rabbitmq_1; sudo docker stop docker_gateway_1; sudo docker stop docker_frontend_1; sudo docker stop docker_discovery_1;'

alias jbb1='clear; rm -r -d /mnt/ramdiskJboss/*; jbb; ./standalone.sh -c standalone1g.xml -Djboss.server.temp.dir=/mnt/ramdiskJboss/tmp/server -Djboss.controller.temp.dir=/mnt/ramdiskJboss/tmp/controller -Djboss.domain.log.dir=/mnt/ramdiskJboss/log -Djboss.server.data.dir=/mnt/ramdiskJboss/data -Djboss.domain.deployment.dir=/mnt/ramdiskJboss/deployments --debug 8787;'
alias jbb2='clear; rm -r -d /mnt/ramdiskJboss/*; jbb; ./standalone.sh -c standalone2g.xml -Djboss.server.temp.dir=/mnt/ramdiskJboss/tmp/server -Djboss.controller.temp.dir=/mnt/ramdiskJboss/tmp/controller -Djboss.domain.log.dir=/mnt/ramdiskJboss/log -Djboss.server.data.dir=/mnt/ramdiskJboss/data -Djboss.domain.deployment.dir=/mnt/ramdiskJboss/deployments --debug 8787;'
################################################################################


